#!/usr/bin/perl
use strict;
use warnings;
use feature qw(say);
use autodie;
use utf8;
binmode STDOUT, ':encoding(UTF-8)';
use WWW::Mechanize;
use Storable;
my $Storable_file = 'CRE_info_hash';

my %CRE = %{ retrieve $Storable_file };

my $url  = 'http://cre.fm/archiv';
my $mech = WWW::Mechanize->new();

open my $dot_fh, '>', 'CRE-Graph.dot';
say $dot_fh "digraph G {\n\toverlap = false\n";

my $c = 0;
for my $key ( sort { $b cmp $a } keys %CRE ) {
    my $ep_url  = $CRE{$key}{'url'};
    my $ep_text = $CRE{$key}{'title'};
    $mech->get($ep_url);
    my @ref_eps; ## temp array for all references. Only for printing the items after the parent item and count them
    for ( $mech->find_all_links( url_regex => qr/cre\d{3}(.html|)\z/xms ) ) {
        my $side_url = $_->url();
        next if $side_url eq $ep_url;
        my $text = $_->text() or next;
        last if $text eq "Tweet";
        push @ref_eps, $text;
        say $dot_fh qq("$ep_text" -> "$text");
    }
    if (@ref_eps) {
        say "$ep_text: " . @ref_eps;
        print map { "\t$_\n" } @ref_eps;
    }
    $c++;
    #last if $c == 5;
} ## end for my $key ( sort { $b...})

say $dot_fh '}';
close $dot_fh;
